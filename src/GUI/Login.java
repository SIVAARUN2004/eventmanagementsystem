/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import java.awt.*;
import java.awt.HeadlessException;
import static java.lang.System.exit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author S Siva Arunachalam
 */
public class Login extends javax.swing.JFrame {
    Connection con=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    public String s1;
    public void getid(String s)
    {
        s1=s;
        EventOrgInfo m=new EventOrgInfo();
        m.s3=s;
    }
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcomeDialog = new javax.swing.JDialog();
        confirmDialog = new javax.swing.JDialog();
        cancelButton = new javax.swing.JButton();
        loginButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        userNameField = new javax.swing.JTextField();
        userNameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        registerButton1 = new javax.swing.JButton();
        showpasswordCheckBox = new javax.swing.JCheckBox();
        userNameLabel1 = new javax.swing.JLabel();
        usertype = new javax.swing.JComboBox<>();
        forgetpasswordbutton = new javax.swing.JButton();

        javax.swing.GroupLayout welcomeDialogLayout = new javax.swing.GroupLayout(welcomeDialog.getContentPane());
        welcomeDialog.getContentPane().setLayout(welcomeDialogLayout);
        welcomeDialogLayout.setHorizontalGroup(
            welcomeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        welcomeDialogLayout.setVerticalGroup(
            welcomeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout confirmDialogLayout = new javax.swing.GroupLayout(confirmDialog.getContentPane());
        confirmDialog.getContentPane().setLayout(confirmDialogLayout);
        confirmDialogLayout.setHorizontalGroup(
            confirmDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        confirmDialogLayout.setVerticalGroup(
            confirmDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setBackground(new java.awt.Color(0, 255, 255));
        setResizable(false);

        cancelButton.setBackground(new java.awt.Color(255, 102, 51));
        cancelButton.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.setToolTipText("Cancel here");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        loginButton.setBackground(new java.awt.Color(255, 102, 51));
        loginButton.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        loginButton.setText("Login");
        loginButton.setToolTipText("Login here");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        passwordField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        passwordField.setToolTipText("Enter Password Here");

        userNameField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        userNameField.setToolTipText("Enter Username Here");

        userNameLabel.setBackground(new java.awt.Color(0, 0, 0));
        userNameLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        userNameLabel.setForeground(new java.awt.Color(0, 51, 255));
        userNameLabel.setText("Username:");

        passwordLabel.setBackground(new java.awt.Color(0, 0, 0));
        passwordLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(0, 51, 255));
        passwordLabel.setText("Password:");

        jLabel1.setFont(new java.awt.Font("Impact", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 255));
        jLabel1.setText("EVENT MANAGEMENT SYSTEM ");

        registerButton1.setBackground(new java.awt.Color(255, 102, 51));
        registerButton1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        registerButton1.setText("Register");
        registerButton1.setToolTipText("Select Usertype Register here");
        registerButton1.setAutoscrolls(true);
        registerButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButton1ActionPerformed(evt);
            }
        });

        showpasswordCheckBox.setText("Show Password");
        showpasswordCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showpasswordCheckBoxActionPerformed(evt);
            }
        });

        userNameLabel1.setBackground(new java.awt.Color(0, 0, 0));
        userNameLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        userNameLabel1.setForeground(new java.awt.Color(0, 51, 255));
        userNameLabel1.setText("Usertype:");

        usertype.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        usertype.setForeground(new java.awt.Color(255, 255, 255));
        usertype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Admin", "Event Organizer", "Attendee" }));
        usertype.setToolTipText("Select Usertype");
        usertype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usertypeActionPerformed(evt);
            }
        });

        forgetpasswordbutton.setBackground(new java.awt.Color(234, 232, 232));
        forgetpasswordbutton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        forgetpasswordbutton.setText("Forget Password ?");
        forgetpasswordbutton.setToolTipText("Click to change Password");
        forgetpasswordbutton.setBorder(null);
        forgetpasswordbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forgetpasswordbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(619, 619, 619)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(passwordLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(showpasswordCheckBox)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userNameLabel)
                            .addComponent(userNameLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(usertype, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 561, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(510, 510, 510))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(registerButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(698, 698, 698))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(forgetpasswordbutton)
                        .addGap(686, 686, 686))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(jLabel1)
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLabel1)
                    .addComponent(usertype, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNameLabel))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLabel))
                .addGap(18, 18, 18)
                .addComponent(showpasswordCheckBox)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(forgetpasswordbutton)
                .addGap(11, 11, 11)
                .addComponent(registerButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        
            System.exit(0);    
        
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        if("".equals(userNameField.getText()) && "".equals(passwordField.getText())){
                        
                        JOptionPane.showMessageDialog(null, "Login Failed..Try again !","Access denied",JOptionPane.ERROR_MESSAGE);
                        userNameField.setText("");
                        passwordField.setText("");
                        userNameField.requestFocus();
        }
        con=Connect.ConnectDB();
        String sql= "select * from adminuser where Username= '" + userNameField.getText() + "' and User_Password ='" + passwordField.getText() + "'";
        String sql2="SELECT `Username`, `User_Password` FROM `attendeeuser` WHERE Username= '" + userNameField.getText() + "' and User_Password ='" + passwordField.getText() + "'";
        String sql3= "select * from eventorguser where Username= '" + userNameField.getText() + "' and User_Password ='" + passwordField.getText() + "'";
        try{
            switch (s1){
                case "Admin":
                    pst=con.prepareStatement(sql);
                    rs= pst.executeQuery();
                    if("".equals(userNameField.getText()) && "".equals(passwordField.getText())){
                        JOptionPane.showMessageDialog(null,"Please Enter Username and Password!");
                    }
                    else if (rs.next()){
                        this.hide();
                        MainMenu menu=new MainMenu();
                        menu.setVisible(true);
                    }
                    else{
                        
                        JOptionPane.showMessageDialog(null, "Login Failed..Try again !","Access denied",JOptionPane.ERROR_MESSAGE);
                        userNameField.setText("");
                        passwordField.setText("");
                        userNameField.requestFocus();
                    }         break;
                case "Attendee":
                    pst=con.prepareStatement(sql2);
                    rs= pst.executeQuery();
                    if("".equals(userNameField.getText()) && "".equals(passwordField.getText())){
                        JOptionPane.showMessageDialog(null,"Please Enter Username and Password!");
                    }
                    else if (rs.next()){
                        this.hide();
                        s1=userNameField.getText();
                        AttendeeMainMenu m=new AttendeeMainMenu();
                        m.s3=userNameField.getText();
                        m.setVisible(true);
                    }
                    else{
                        
                        JOptionPane.showMessageDialog(null, "Login Failed..Try again !","Access denied",JOptionPane.ERROR_MESSAGE);
                        userNameField.setText("");
                        passwordField.setText("");
                        userNameField.requestFocus();
                    }         break;
                case "Event Organizer":
                    pst=con.prepareStatement(sql3);
                    rs= pst.executeQuery();
                    if("".equals(userNameField.getText()) && "".equals(passwordField.getText())){
                        JOptionPane.showMessageDialog(null,"Please Enter Username and Password!");
                    }
                    else if (rs.next()){
                        this.hide();
                        s1=userNameField.getText();
                        EventOrganizerMainMenu menu=new EventOrganizerMainMenu();
                        menu.get1(s1);
                        menu.setVisible(true);

                    }
                    else{
                        
                        JOptionPane.showMessageDialog(null, "Login Failed..Try again !","Access denied",JOptionPane.ERROR_MESSAGE);
                        userNameField.setText("");
                        passwordField.setText("");
                        userNameField.requestFocus();
                    }         break;
                default:
                    break;
            }
        }
        catch(SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null, e);    
        }  
    }//GEN-LAST:event_loginButtonActionPerformed

    private void registerButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButton1ActionPerformed
        if(null == s1){
                JOptionPane.showMessageDialog(null,"Usertype is manditatory");
        }
        switch (s1) {
            case "Attendee":{
                AttendeeForm user=new AttendeeForm();
                this.hide();
                user.setVisible(true);
                    break;
                }
            case "Event Organizer":{
                EventOrganizerForm user=new EventOrganizerForm();
                this.hide();
                user.setVisible(true);
                    break;
                }
            case "Admin":{
                UserRegisteration user=new UserRegisteration();
                this.hide();
                user.setVisible(true);
                    break;
                }
            default:
                break;
        }
    }//GEN-LAST:event_registerButton1ActionPerformed

    private void showpasswordCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showpasswordCheckBoxActionPerformed
        // TODO add your handling code here:
        if(showpasswordCheckBox.isSelected())
        {
            passwordField.setEchoChar((char)0);
        }
        else
        {
            passwordField.setEchoChar('*');
        }
    }//GEN-LAST:event_showpasswordCheckBoxActionPerformed

    private void usertypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usertypeActionPerformed
        // TODO add your handling code here:
        String s2=(String) usertype.getSelectedItem();
        if(null == s2){
            if("".equals(evt.getSource())){
                JOptionPane.showMessageDialog(null,"Usertype is manditatory");
            }
        }
        else switch (s2){
            case "Attendee":
                s1="Attendee";
                break;
            case "Event Organizer":
                s1="Event Organizer";
                break;
            case "Admin":
                s1="Admin";
                break;
            default:
            if("".equals(evt.getSource()))
            {
                JOptionPane.showMessageDialog(null,"Usertype is manditatory");
            }
            break;
        }
    }//GEN-LAST:event_usertypeActionPerformed

    private void forgetpasswordbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forgetpasswordbuttonActionPerformed
        // TODO add your handling code here:
        if(null != s1){
                ForgetPassword user=new ForgetPassword();
                this.hide();
                user.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(null,"Usertype is manditatory");
        }
    }//GEN-LAST:event_forgetpasswordbuttonActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            Login login;
            login = new Login();
            login.setVisible(true);
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            login.setSize(screenSize.width, screenSize.height);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JDialog confirmDialog;
    private javax.swing.JButton forgetpasswordbutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JButton registerButton1;
    private javax.swing.JCheckBox showpasswordCheckBox;
    private javax.swing.JTextField userNameField;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JLabel userNameLabel1;
    public javax.swing.JComboBox<String> usertype;
    private javax.swing.JDialog welcomeDialog;
    // End of variables declaration//GEN-END:variables

}
